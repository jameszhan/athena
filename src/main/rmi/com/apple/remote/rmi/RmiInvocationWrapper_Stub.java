// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.apple.remote.rmi;

public final class RmiInvocationWrapper_Stub extends java.rmi.server.RemoteStub implements com.apple.remote.rmi.RmiInvocationHandler {
	private static final long serialVersionUID = 2;

	private static java.lang.reflect.Method $method_getInterfaces_0;
	private static java.lang.reflect.Method $method_invoke_1;

	static {
		try {
			$method_getInterfaces_0 = com.apple.remote.rmi.RmiInvocationHandler.class.getMethod("getInterfaces", new java.lang.Class[] {});
			$method_invoke_1 = com.apple.remote.RemoteInvocationHandler.class.getMethod("invoke", new java.lang.Class[] { com.apple.remote.RemoteInvocation.class });
		} catch (java.lang.NoSuchMethodException e) {
			throw new java.lang.NoSuchMethodError("stub class initialization failed");
		}
	}

	// constructors
	public RmiInvocationWrapper_Stub(java.rmi.server.RemoteRef ref) {
		super(ref);
	}

	// methods from remote interfaces

	// implementation of getInterfaces()
	public java.lang.Class<?>[] getInterfaces() throws java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_getInterfaces_0, null, 1135919120760853306L);
			return ((java.lang.Class[]) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}

	// implementation of invoke(RemoteInvocation)
	public java.lang.Object invoke(com.apple.remote.RemoteInvocation $param_RemoteInvocation_1) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException,
			java.lang.reflect.InvocationTargetException, java.rmi.RemoteException {
		try {
			Object $result = ref.invoke(this, $method_invoke_1, new java.lang.Object[] { $param_RemoteInvocation_1 }, -2094546061207629871L);
			return ((java.lang.Object) $result);
		} catch (java.lang.RuntimeException e) {
			throw e;
		} catch (java.rmi.RemoteException e) {
			throw e;
		} catch (java.lang.IllegalAccessException e) {
			throw e;
		} catch (java.lang.NoSuchMethodException e) {
			throw e;
		} catch (java.lang.reflect.InvocationTargetException e) {
			throw e;
		} catch (java.lang.Exception e) {
			throw new java.rmi.UnexpectedException("undeclared checked exception", e);
		}
	}
}
